|
  openapi: 3.0.0
  info:
    title: Crypto checkout
    version: 1.0.0
  paths:
    /v1/user:
      post:
        operationId: PostV1User
        responses:
          "200":
            description: POST /v1/user Successful response
            content:
              application/json:
                schema:
                  type: object
                  properties: {}
          "400":
            description: POST /v1/user Error response
            content:
              application/json:
                schema:
                  type: object
                  properties: {}
        description: Creacion de usuarios
        summary: Creacion de usuarios
        tags:
          - users
        requestBody:
          description: POST /v1/user request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                    format: email
                  role:
                    type: string
                    enum:
                      - cashier
                      - viewer
                      - admin
                    default: viewer
                  isTermsAcepted:
                    type: boolean
                required:
                  - name
                  - lastName
                  - email
                  - isTermsAcepted
      put:
        operationId: PutV1User
        responses:
          "200":
            description: PUT /v1/user Successful response
            content:
              application/json:
                schema:
                  type: object
                  properties: {}
          "400":
            description: PUT /v1/user Error response
            content:
              application/json:
                schema:
                  type: object
                  properties: {}
        description: Actualizacion de usuarios
        summary: Actualizacion de usuarios
        tags:
          - users
        requestBody:
          description: PUT /v1/user request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                    format: email
                  role:
                    type: string
                    enum:
                      - cashier
                      - viewer
                      - admin
                    default: viewer
                  isTermsAcepted:
                    type: boolean
                  isDeleted:
                    type: boolean
                    default: false
                required:
                  - id
                  - name
                  - lastName
                  - email
                  - isTermsAcepted
    /v1/auth/otp:
      post:
        operationId: PostV1AuthOtp
        responses:
          "200":
            description: POST /v1/auth/otp Successful response
            content:
              application/json:
                schema:
                  type: object
                  properties: {}
          "400":
            description: POST /v1/auth/otp Error response
            content:
              application/json:
                schema:
                  type: object
                  properties: {}
        description: Envio de One time password
        summary: Envio OTP
        tags:
          - auth
        requestBody:
          description: POST /v1/auth/otp request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    format: email
                required:
                  - email
    /v1/auth/sign-in:
      post:
        operationId: PostV1AuthSignIn
        responses:
          "200":
            description: POST /v1/auth/sign-in Successful response
            content:
              application/json:
                schema:
                  type: object
                  properties: {}
          "400":
            description: POST /v1/auth/sign-in Error response
            content:
              application/json:
                schema:
                  type: object
                  properties: {}
        description: inicio de sesion
        summary: Inicio de sesion
        tags:
          - auth
        requestBody:
          description: POST /v1/auth/sign-in request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string
                required:
                  - username
                  - password
    /v1/auth/change-password:
      put:
        operationId: PutV1AuthChangePassword
        responses:
          "200":
            description: PUT /v1/auth/change-password Successful response
            content:
              application/json:
                schema:
                  type: object
                  properties: {}
          "400":
            description: PUT /v1/auth/change-password Error response
            content:
              application/json:
                schema:
                  type: object
                  properties: {}
        description: Cambiar password
        summary: Cambiar password
        tags:
          - auth
        requestBody:
          description: PUT /v1/auth/change-password request body
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties: {}
                  - type: object
                    properties:
                      password:
                        type: string
                    required:
                      - password
        security:
          - APIKEY_1: []
    /v1/auth/forgot-password:
      post:
        operationId: PostV1AuthForgotPassword
        responses:
          "200":
            description: POST /v1/auth/forgot-password Successful response
            content:
              application/json:
                schema:
                  type: object
                  properties: {}
          "400":
            description: POST /v1/auth/forgot-password Error response
            content:
              application/json:
                schema:
                  type: object
                  properties: {}
        description: password olvidado
        summary: password olvidado
        tags:
          - auth
        requestBody:
          description: POST /v1/auth/forgot-password request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                required:
                  - email
    /v1/auth/profile:
      get:
        operationId: GetV1AuthProfile
        responses:
          "200":
            description: GET /v1/auth/profile Successful response
            content:
              application/json:
                schema:
                  type: object
                  properties: {}
          "400":
            description: GET /v1/auth/profile Error response
            content:
              application/json:
                schema:
                  type: object
                  properties: {}
        description: Obtener perfil
        summary: Obtener perfil
        tags:
          - auth
        security:
          - APIKEY_1: []
  components:
    schemas: {}
    responses: {}
    parameters: {}
    examples: {}
    requestBodies: {}
    headers: {}
    securitySchemes:
      APIKEY_1:
        type: apiKey
        in: header
        name: Authorization
    links: {}
    callbacks: {}
  tags:
    - name: coins
      description: Control de tipos de monedas
    - name: users
      description: Control de usuarios
    - name: auth
      description: Control de autenticacion
    - name: files
      description: Control de archivos
    - name: stores
      description: Control de tiendas
    - name: order
      description: Control de ordenes
    - name: notifications
      description: Control de notificaciones
    - name: webhook
      description: Control de webhooks
  servers:
    - url: https://crypto-checkout-v2.dev.build.koibanx.com/v1
